version: "3.9"

# This compose file brings up two services:
# 1) docker: Docker-in-Docker (DinD) with TLS enabled, exposed via service alias "docker" on 2376
# 2) jenkins: Jenkins connects to DinD via DOCKER_HOST=tcp://docker:2376 with TLS
# Meets the assignment requirements: DinD, Jenkins, named volumes (jenkins-home, docker-data, certs), and annotated configuration

services:
  docker:
    image: docker:24-dind
    container_name: dind
    privileged: true           # DinD requires privileged mode
    user: root
    environment:
      DOCKER_TLS_CERTDIR: /certs
    volumes:
      - docker-certs-ca:/certs/ca           # TLS CA certificates
      - docker-certs-client:/certs/client   # TLS client certificates
      - jenkins-home:/var/jenkins_home      # Mount path kept for compatibility with the reference doc
      - docker-data:/var/lib/docker         # Named volume to persist image layers (faster builds)
    networks:
      ci:
        aliases:
          - docker                           # Allow Jenkins to reach DinD via tcp://docker:2376
    healthcheck:
      test: ["CMD", "docker", "info"]
      interval: 10s
      timeout: 5s
      retries: 15

  jenkins:
    image: jenkins/jenkins:lts-jdk17
    container_name: jenkins
    user: root
    depends_on:
      docker:
        condition: service_healthy
    environment:
      DOCKER_HOST: "tcp://docker:2376"      # Connect to DinD via service alias with TLS
      DOCKER_CERT_PATH: "/certs/client"
      DOCKER_TLS_VERIFY: "1"
    volumes:
      - docker-certs-client:/certs/client:ro
      - jenkins-home:/var/jenkins_home      # Persist Jenkins home
      - /usr/bin/docker:/usr/bin/docker     # Provide docker CLI inside Jenkins (matches reference)
    ports:
      - "8080:8080"
      - "50000:50000"
    networks:
      - ci

networks:
  ci: {}

volumes:
  jenkins-home:
  docker-data:
  docker-certs-ca:
  docker-certs-client:
